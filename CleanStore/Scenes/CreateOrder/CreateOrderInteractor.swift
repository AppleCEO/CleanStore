//
//  CreateOrderInteractor.swift
//  CleanStore
//
//  Created by 도미닉 on 6/12/25.
//  Copyright (c) 2025 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreateOrderBusinessLogic
{
    var shippingMethods: [String] { get }
    func showOrderToEdit(request: CreateOrder.EditOrder.Request)
    func formatExpirationDate(request: CreateOrder.FormatExpirationDate.Request)
}

protocol CreateOrderDataStore
{
    //var name: String { get set }
    var orderToEdit: Order? { get set }
}

class CreateOrderInteractor: CreateOrderBusinessLogic, CreateOrderDataStore
{
    var presenter: CreateOrderPresentationLogic?
    var worker = OrdersWorker(ordersStore: OrdersMemStore())
    var orderToEdit: Order?
    
    var shippingMethods = [
        ShipmentMethod(speed: .Standard).toString(),
        ShipmentMethod(speed: .OneDay).toString(),
        ShipmentMethod(speed: .TwoDay).toString()
    ]
    
    // MARK: Do something
    
    func showOrderToEdit(request: CreateOrder.EditOrder.Request)
    {
        if let orderToEdit = orderToEdit {
          let response = CreateOrder.EditOrder.Response(order: orderToEdit)
          presenter?.presentOrderToEdit(response: response)
        }
    }
    
    func formatExpirationDate(request: CreateOrder.FormatExpirationDate.Request)
    {
        let response = CreateOrder.FormatExpirationDate.Response(date: request.date)
        presenter?.presentExpirationDate(response: response)
    }
}
